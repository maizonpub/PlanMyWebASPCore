@model PaymentViewModel


@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/Mobile.cshtml";
    var user = Model.Order.Users;
    var token = user.UserPaymentTokens != null ? user.UserPaymentTokens.Where(x => x.TokenStatus == DAL.TokenStatus.Valid).OrderByDescending(x => x.Id).FirstOrDefault() : null;
    string transaction_type = "sale";
    decimal recurringamount = 0;

    if (token == null)
    {
        transaction_type = "sale,create_payment_token";
    }
    else if (Model.PaymentSetting.PaymentType == DAL.PaymentType.Recurring)
    {
        transaction_type = "create_payment_token";
        recurringamount = Model.Order.Total;
    }
    else
    {
        transaction_type = "sale";
    }
    decimal amount = Model.Order.Total - recurringamount;
    var redirecturl = "http://" + Context.Request.Host.Host + ":" + Context.Request.Host.Port + "/MobilePay/Receipt";
    decimal subtotal = 0;
}

<form name="checkout" id="checkout" method="post" class="checkout woocommerce-checkout" action="/MobilePay/Confirm" enctype="multipart/form-data">
    <input type="hidden" name="bill_to_forename" id="bill_to_forename" value="@Model.Order.Users.FirstName" />
    <input type="hidden" name="bill_to_surname" id="bill_to_surname" value="@Model.Order.Users.LastName" />

    <input type="hidden" name="bill_to_address_country" id="bill_to_address_country" value="LB" />
    <input type="hidden" name="bill_to_address_line1" id="bill_to_address_line1" value="@Model.Order.Users.Address" autocomplete="address-line1">
    <input type="hidden" name="bill_to_address_city" id="bill_to_address_city" value="@Model.Order.Users.City">
    <input type="hidden" name="bill_to_phone" id="bill_to_phone" placeholder="" value="@Model.Order.Users.PhoneNumber">
    <input type="hidden" required name="bill_to_email" id="bill_to_email" placeholder="" value="@Model.Order.Users.Email">
    <input type="hidden" id="amount" name="amount" value="@amount" />
    <input type="hidden" id="currency" name="currency" value="USD" />
    <input type="hidden" id="access_key" name="access_key" value="@Model.PaymentSetting.AccessKey" />
    <input type="hidden" id="profile_id" name="profile_id" value="@Model.PaymentSetting.ProfileId" />
    <input type="hidden" id="transaction_uuid" name="transaction_uuid" value="@Model.Order.TransactionUUID" />

    <input type="hidden" id="unsigned_field_names" name="unsigned_field_names" value="" />
    <input type="hidden" id="signed_date_time" name="signed_date_time" value="@Model.Order.TransactionDate.ToUniversalTime().ToString("yyyy-MM-dd'T'HH:mm:ss'Z'")" />
    <input type="hidden" id="locale" name="locale" value="en" />
    <input type="hidden" id="transaction_type" name="transaction_type" value="@transaction_type" />
    <input type="hidden" id="reference_number" name="reference_number" value="@Model.Order.ReferenceNumber" />
    @if (token != null && Model.PaymentSetting.PaymentType == DAL.PaymentType.Tokenization)
    {
        <input type="hidden" id="signed_field_names" name="signed_field_names" value="access_key,profile_id,transaction_uuid,signed_field_names,unsigned_field_names,signed_date_time,locale,transaction_type,reference_number,amount,currency,bill_to_address_city,bill_to_address_country,bill_to_address_line1,bill_to_email,bill_to_forename,bill_to_phone,bill_to_surname,override_custom_receipt_page,payment_token" />
        <input type="hidden" name="payment_token" id="payment_token" value="@token.Token" />
    }
    else
    {
        <input type="hidden" id="signed_field_names" name="signed_field_names" value="access_key,profile_id,transaction_uuid,signed_field_names,unsigned_field_names,signed_date_time,locale,transaction_type,reference_number,amount,currency,bill_to_address_city,bill_to_address_country,bill_to_address_line1,bill_to_email,bill_to_forename,bill_to_phone,bill_to_surname,override_custom_receipt_page" />
    }
    <input type="hidden" id="override_custom_receipt_page" name="override_custom_receipt_page" value="@redirecturl" />
    @if (Model.PaymentSetting.PaymentType == DAL.PaymentType.Recurring)
    {
        <input type="hidden" name="recurring_frequency" id="recurring_frequency" value="@Model.PaymentSetting.RecurringFrequency" />
        <input type="hidden" name="recurring_start_date" value="@Model.Order.TransactionDate.ToString("yyyyMMdd")" />
        <input type="hidden" name="recurring_amount" id="recurring_amount" value="@recurringamount" />
    }


</form>

                   <script>
                       document.getElementById("checkout").submit();
                   </script>