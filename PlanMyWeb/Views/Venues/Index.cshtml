@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Mvc.Common

@model VendorsViewModel
@{
    ViewData["Title"] = "Venues";
}
<style>
    html body {
        background-color: #ffffff;
        font-family: Istok Web !important;
        font-weight: 400,400italic,700,700italic;
    }

    a {
        color: #5f5f9e;
        text-decoration: none;
        font-weight: 600;
    }
</style>


<div class="tp-breadcrumb">
    <div class="container">
        <div class="row">
            <div class="col-md-8">
                <ol class="breadcrumb listnone">
                    <li>
                        <!-- Breadcrumb NavXT 6.2.1 -->
                        <span property="itemListElement" typeof="ListItem"><a property="item" typeof="WebPage" title="Go to Plan My." href="~/" class="home"><span property="name">Plan My</span></a><meta property="position" content="1"></span> &gt; <span class="post post-page current-item">Venues</span>
                    </li>
                </ol>
            </div>
        </div>
    </div>
</div>

<!--main-container-->
<div class="container">
    <div class="row">
        <div class="col-md-3">
            <div class="left-sidebar">
                <div class="filter-box collapse in" id="searchform">
                    <div class="row filter-form">
                        <div class="col-md-12">
                            <h2 style="color:black">Refine Your Search</h2>
                        </div>
                        <form method="get" action="Vendors">
                            <!--<div class="col-md-12">
                                <div class="amount_box">$<span id="amount"></span></div>
                                <div id="price-range" class="pricing_range"></div>
                                <input type="hidden" id="min_price" />
                                <input type="hidden" id="max_price" />
                                <input type="hidden" id="list_style" value="oscar"  />
                            </div>-->
                            <input type="hidden" id="list_style" value="oscar" />
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="control-label" for="category_type">Category</label>
                                    <select name="CategoryId" id="CategoryId" class="form-control input-md" onchange="window.location.href='/vendors?CategoryId='+this.value">
                                        <option value="">Select Category</option>
                                        @foreach (var row in Model.VendorCategories)
                                        {
                                            if (row.Title.ToLower().Contains("venu"))
                                            {
                                                <option value="@row.Id" selected>@row.Title</option>
                                            }
                                            else
                                            {
                                                <option value="@row.Id">@row.Title</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                            @foreach (var row in Model.VendorTypes)
                            {
                                <div class="col-md-12">
                                    <label class="control-label" for="type_type">@row.Title</label>
                                    <div class="form-group">
                                        <br /><h4>@row.Title</h4>
                                        @foreach (var record in row.VendorTypeValues)
                                        {
                                            if ((Context.Request.HasFormContentType && (Context.Request.Form["TypeId"] != "" && Context.Request.Form["TypeId"].Contains(record.Id.ToString()))) || (Context.Request.Query["TypeId"] != "" && Context.Request.Query["TypeId"].Contains(record.Id.ToString())))
                                            {
                                                <label class="aminities_box"><input type="checkbox" checked class="aminities" name="TypeId" id="TypeId" value="@record.Id" />@record.Title</label>
                                            }
                                            else
                                            {
                                                <label class="aminities_box"><input type="checkbox" class="aminities" name="TypeId" id="TypeId" value="@record.Id" />@record.Title</label>
                                            }
                                        }

                                    </div>
                                </div>
                            }
                            <div class="col-md-12">
                                <button type="submit" id="leftsidebar-search" class="btn tp-btn-default tp-btn-lg btn-block">Search</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>


        <div class="col-md-9 content-left">
            <div class="row">
                <div class="col-md-12">
                    <div id="item_results">
                        <div class="row">
                            <div class="col-md-12 vendor-listing">
                                <h2 style="color:#000000;">Total @Model.VendorItems.TotalItemCount items in your search</h2>
                            </div>
                            @foreach (var row in Model.VendorItems)
                            {
                            <div class="col-md-3 vendor-box">
                                <div class="grid" style="width:100%;">
                                    <a href="~/Vendors/Details/@row.Id">
                                        <div class="container--6baf4">

                                            <figure class="effect-oscar" style="width:100%;border-top-left-radius: 4px;border-top-right-radius: 4px;border-bottom-right-radius:4px;border-bottom-left-radius:4px;">
                                                <img src="~/Media/@row.Thumb" class="img-responsive wp-post-image" alt="" style="width:100%;height:auto" />
                                                <div class="info-container--767e9" style="padding:10px 0 10px 0;margin-top:-50px;position:relative;z-index:999999;background-color:white">
                                                    <div class="vendor-name--51686 serif-med--4d231 lh-header--7eeba">
                                                        @row.Title
                                                    </div>
                                                    <br/>
                                                    <div class="secondary-info--d1097">@row.Address </div>
                                                </div>

                                                @*<figcaption>
                            <h2><a href="~/Vendors/Details/@row.Id">@row.Title</a></h2>
                            <p></p>
                            <a href="~/Vendors/Details/@row.Id">View more</a>
                        </figcaption>*@

                                            </figure>

                                        </div>
                                    </a>
                                </div>
                            </div>
                                
                            }
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    @if (Context.Request.HasFormContentType)
                    {
                        if (!string.IsNullOrEmpty(Context.Request.Form["TypeId"].ToString()))
                        {
                            @Html.PagedListPager(Model.VendorItems, page => Url.Action("Index", new { page, TypeId = Context.Request.Form["TypeId"] }), new PagedListRenderOptions
                       {
                           DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                           DisplayLinkToLastPage = PagedListDisplayMode.Always,
                           DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                           DisplayLinkToNextPage = PagedListDisplayMode.Always,
                           DisplayPageCountAndCurrentLocation = true,
                           MaximumPageNumbersToDisplay = 0
                       });
                        }
                        else
                        {
                            @Html.PagedListPager(Model.VendorItems, page => Url.Action("Index", new { page }), new PagedListRenderOptions
                            {
                                DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                                DisplayLinkToLastPage = PagedListDisplayMode.Always,
                                DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                                DisplayLinkToNextPage = PagedListDisplayMode.Always,
                                DisplayPageCountAndCurrentLocation = true,
                                MaximumPageNumbersToDisplay = 0
                            });
                        }
                    }
                    else
                    {
                        if (!string.IsNullOrEmpty(Context.Request.Query["TypeId"].ToString()))
                        {
                            @Html.PagedListPager(Model.VendorItems, page => Url.Action("Index", new { page, TypeId = Context.Request.Query["TypeId"] }), new PagedListRenderOptions
                       {
                           DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                           DisplayLinkToLastPage = PagedListDisplayMode.Always,
                           DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                           DisplayLinkToNextPage = PagedListDisplayMode.Always,
                           DisplayPageCountAndCurrentLocation = true,
                           MaximumPageNumbersToDisplay = 0
                       });
                        }
                        else
                        {
                            @Html.PagedListPager(Model.VendorItems, page => Url.Action("Index", new { page }), new PagedListRenderOptions
                            {
                                DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                                DisplayLinkToLastPage = PagedListDisplayMode.Always,
                                DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                                DisplayLinkToNextPage = PagedListDisplayMode.Always,
                                DisplayPageCountAndCurrentLocation = true,
                                MaximumPageNumbersToDisplay = 0
                            });
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>


